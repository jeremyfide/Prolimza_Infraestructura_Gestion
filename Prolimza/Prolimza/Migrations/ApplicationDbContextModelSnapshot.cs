// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prolimza.Models;

#nullable disable

namespace Prolimza.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prolimza.Models.Auditoria", b =>
                {
                    b.Property<int>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAuditoria"));

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAuditoria");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdProducto");

                    b.ToTable("auditoria", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Bodega", b =>
                {
                    b.Property<int>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBodega"));

                    b.Property<string>("DetalleDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDistrito")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBodega");

                    b.HasIndex("IdDistrito");

                    b.ToTable("bodega", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Canton", b =>
                {
                    b.Property<int>("IdCanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCanton"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCanton");

                    b.HasIndex("IdProvincia");

                    b.ToTable("canton", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCompra");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("compra", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.DetalleCompraMateriaPrima", b =>
                {
                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraIdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("MateriaPrimaIdMateriaPrima")
                        .HasColumnType("int");

                    b.HasKey("IdCompra", "IdMateriaPrima");

                    b.HasIndex("CompraIdCompra");

                    b.HasIndex("MateriaPrimaIdMateriaPrima");

                    b.ToTable("detalleCompraMateriaPrima", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.DetalleCompraProducto", b =>
                {
                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CompraIdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdCompra", "IdProducto");

                    b.HasIndex("CompraIdCompra");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("detalleCompraProducto", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdVenta", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("detalleVenta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Distrito", b =>
                {
                    b.Property<int>("IdDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDistrito"));

                    b.Property<int>("IdCanton")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDistrito");

                    b.HasIndex("IdCanton");

                    b.ToTable("distrito", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.EstadoVenta", b =>
                {
                    b.Property<int>("IdEstadoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoVenta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoVenta");

                    b.ToTable("estadoVenta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.HistorialEstadoVenta", b =>
                {
                    b.Property<int>("IdHistorialEstadoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialEstadoVenta"));

                    b.Property<int?>("EstadoVentaIdEstadoVenta")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<int?>("VentaIdVenta")
                        .HasColumnType("int");

                    b.HasKey("IdHistorialEstadoVenta");

                    b.HasIndex("EstadoVentaIdEstadoVenta");

                    b.HasIndex("VentaIdVenta");

                    b.ToTable("historialEstadoVenta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.MateriaPrima", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateriaPrima"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMateriaPrima");

                    b.HasIndex("IdBodega");

                    b.ToTable("materiaPrima", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.MateriaReceta", b =>
                {
                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdReceta", "IdMateriaPrima");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("materiaReceta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdBodega");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProvincia");

                    b.ToTable("provincia", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Receta", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReceta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReceta");

                    b.HasIndex("IdProducto");

                    b.ToTable("receta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ContrasenaEncriptada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("Prolimza.Models.Auditoria", b =>
                {
                    b.HasOne("Prolimza.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("IdMateriaPrima");

                    b.HasOne("Prolimza.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto");

                    b.Navigation("MateriaPrima");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Prolimza.Models.Bodega", b =>
                {
                    b.HasOne("Prolimza.Models.Distrito", "Distrito")
                        .WithMany("Bodegas")
                        .HasForeignKey("IdDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("Prolimza.Models.Canton", b =>
                {
                    b.HasOne("Prolimza.Models.Provincia", "Provincia")
                        .WithMany("Cantones")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Prolimza.Models.Compra", b =>
                {
                    b.HasOne("Prolimza.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Prolimza.Models.DetalleCompraMateriaPrima", b =>
                {
                    b.HasOne("Prolimza.Models.Compra", "Compra")
                        .WithMany("DetalleCompraMateriaPrimas")
                        .HasForeignKey("CompraIdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prolimza.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("MateriaPrimaIdMateriaPrima");

                    b.Navigation("Compra");

                    b.Navigation("MateriaPrima");
                });

            modelBuilder.Entity("Prolimza.Models.DetalleCompraProducto", b =>
                {
                    b.HasOne("Prolimza.Models.Compra", "Compra")
                        .WithMany("DetalleCompraProductos")
                        .HasForeignKey("CompraIdCompra");

                    b.HasOne("Prolimza.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProducto");

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Prolimza.Models.DetalleVenta", b =>
                {
                    b.HasOne("Prolimza.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prolimza.Models.Venta", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Prolimza.Models.Distrito", b =>
                {
                    b.HasOne("Prolimza.Models.Canton", "Canton")
                        .WithMany("Distritos")
                        .HasForeignKey("IdCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("Prolimza.Models.HistorialEstadoVenta", b =>
                {
                    b.HasOne("Prolimza.Models.EstadoVenta", "EstadoVenta")
                        .WithMany("HistorialesEstadoVenta")
                        .HasForeignKey("EstadoVentaIdEstadoVenta");

                    b.HasOne("Prolimza.Models.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("VentaIdVenta");

                    b.Navigation("EstadoVenta");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Prolimza.Models.MateriaPrima", b =>
                {
                    b.HasOne("Prolimza.Models.Bodega", "Bodega")
                        .WithMany("MateriasPrimas")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");
                });

            modelBuilder.Entity("Prolimza.Models.MateriaReceta", b =>
                {
                    b.HasOne("Prolimza.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("IdMateriaPrima")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prolimza.Models.Receta", "Receta")
                        .WithMany("MateriasReceta")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Prolimza.Models.Producto", b =>
                {
                    b.HasOne("Prolimza.Models.Bodega", "Bodega")
                        .WithMany("Productos")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");
                });

            modelBuilder.Entity("Prolimza.Models.Receta", b =>
                {
                    b.HasOne("Prolimza.Models.Producto", "Producto")
                        .WithMany("Recetas")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Prolimza.Models.Usuario", b =>
                {
                    b.HasOne("Prolimza.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Prolimza.Models.Venta", b =>
                {
                    b.HasOne("Prolimza.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Prolimza.Models.Bodega", b =>
                {
                    b.Navigation("MateriasPrimas");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Prolimza.Models.Canton", b =>
                {
                    b.Navigation("Distritos");
                });

            modelBuilder.Entity("Prolimza.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompraMateriaPrimas");

                    b.Navigation("DetalleCompraProductos");
                });

            modelBuilder.Entity("Prolimza.Models.Distrito", b =>
                {
                    b.Navigation("Bodegas");
                });

            modelBuilder.Entity("Prolimza.Models.EstadoVenta", b =>
                {
                    b.Navigation("HistorialesEstadoVenta");
                });

            modelBuilder.Entity("Prolimza.Models.Producto", b =>
                {
                    b.Navigation("Recetas");
                });

            modelBuilder.Entity("Prolimza.Models.Provincia", b =>
                {
                    b.Navigation("Cantones");
                });

            modelBuilder.Entity("Prolimza.Models.Receta", b =>
                {
                    b.Navigation("MateriasReceta");
                });

            modelBuilder.Entity("Prolimza.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Prolimza.Models.Venta", b =>
                {
                    b.Navigation("DetallesVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
